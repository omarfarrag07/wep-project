CREATE DATABASE flight_booking;

USE flight_booking;

-- Companies Table
CREATE TABLE companies (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    bio TEXT,
    address TEXT,
    location VARCHAR(255),
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    tel VARCHAR(15),
    logo_img VARCHAR(255),
    account_balance DECIMAL(10, 2) DEFAULT 0.00
);

-- Passengers Table
CREATE TABLE passengers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    tel VARCHAR(15),
    photo VARCHAR(255),
    passport_img VARCHAR(255),
    account_balance DECIMAL(10, 2) DEFAULT 0.00
);

-- Flights Table
CREATE TABLE flights (
    id INT AUTO_INCREMENT PRIMARY KEY,
    company_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    itinerary TEXT NOT NULL,
    max_passengers INT NOT NULL,
    registered_passengers INT DEFAULT 0,
    pending_passengers INT DEFAULT 0,
    fees DECIMAL(10, 2) NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL,
    is_completed BOOLEAN DEFAULT 0,
    FOREIGN KEY (company_id) REFERENCES companies(id)
);

-- Flight-Passenger Relationship Table
CREATE TABLE flight_passenger (
    id INT AUTO_INCREMENT PRIMARY KEY,
    flight_id INT NOT NULL,
    passenger_id INT NOT NULL,
    status ENUM('pending', 'registered') NOT NULL,
    FOREIGN KEY (flight_id) REFERENCES flights(id),
    FOREIGN KEY (passenger_id) REFERENCES passengers(id)
);

-- Messages Table
CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    from_user_id INT NOT NULL,
    to_user_id INT NOT NULL,
    content TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (from_user_id) REFERENCES companies(id),
    FOREIGN KEY (to_user_id) REFERENCES passengers(id)
);

ALTER TABLE companies ADD COLUMN photo VARCHAR(255);